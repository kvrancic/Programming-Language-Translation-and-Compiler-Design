
*********************************************************
** FRISCjs - FRISC simulator in JavaScript
** 
** Usage instructions:
** 
**   pass filename argument with the FRISC program:
**     > node main.js filename
**   or input the FRISC program via stdin:
**     > cat filename | node main.js
** 
** Note: the simulator has a memory module of 256KB,
**       i.e. from 0x00000000 to 0x0003FFFF.
** 
** Verbose debugging mode can be turned on by passing
**   specifying the -v flag, e.g.:
** 
**     > node main.js -v filename
**   or
**     > cat filename | node main.js -v
** 
** The CPU frequency (in Hz) can be set with the -cpufreq
**   flag argument (default value is 1000):
** 
**     > node main.js -cpufreq 2 filename
**   or
**     > cat filename | node main.js -cpufreq 2
** 
** Memory size (in number of 1K locations) can be set with
**   the -memsize flag argument (default value is 256):
** 
**     > node main.js -memsize 64 filename
**   or
**     > cat filename | node main.js -memsize 64
** 
** Execution flow:
** 
**   1) compilation of the FRISC program to machine code 
**   2) step-by-step execution of FRISC program 
**      with logging of processor state at each step  
**      to stderr (if in verbose mode)
**   3) output of r6 to stdout after program execution
** 
** GUI version of FRISC simulator is available at:
** 
**   http://fer-ppj.github.com/FRISCjs/main.html
** 
** Bug reports:
** 
**   mailto:ppj@zemris.fer.hr, or 
**   http://github.com/fer-ppj/FRISCjs/issues
*********************************************************


*********************************************************
Reading program from file: C:\Users\Karlo\OneDrive - fer.hr\5.semestar\PPROJ\lab-4\testovi\test05\a.frisc
*********************************************************


*********************************************************
Input FRISC program:
*********************************************************

    MOVE %D 40000, r7
    MOVE %D 3, r0
    STORE r0, (V0)
    PUSH r0
    MOVE %D 71, r0
    STORE r0, (V0)
    PUSH r0
    CALL MUL
    POP r0
    STORE r0, (V0)
    LOAD r6, (V0)
    HALT

V0  DW 0
DO  DW 0

MD_SGN MOVE 0, R6
   XOR R0, 0, R0
   JP_P MD_TST1
   XOR R0, -1, R0
   ADD R0, 1, R0
   MOVE 1, R6
MD_TST1 XOR R1, 0, R1
   JP_P MD_SGNR
   XOR R1, -1, R1
   ADD R1, 1, R1
   XOR R6, 1, R6
MD_SGNR RET
MD_INIT POP R4
   POP R3
   POP R1
   POP R0
   CALL MD_SGN
   MOVE 0, R2
   PUSH R4
   RET
MD_RET XOR R6, 0, R6
   JP_Z MD_RET1
   XOR R2, -1, R2
   ADD R2, 1, R2
MD_RET1 POP R4
   PUSH R2
   PUSH R3
   PUSH R4
   RET
MUL CALL MD_INIT
   XOR R1, 0, R1
   JP_Z MUL_RET
   SUB R1, 1, R1
MUL_1  ADD R2, R0, R2
   SUB R1, 1, R1
   JP_NN MUL_1
MUL_RET CALL MD_RET
   RET
DIV CALL MD_INIT
   XOR R1, 0, R1
   JP_Z DIV_RET
DIV_1  ADD R2, 1, R2
   SUB R0, R1, R0
   JP_NN DIV_1
   SUB R2, 1, R2
DIV_RET CALL MD_RET
   RET


*********************************************************
Parsing input FRISC program.
*********************************************************


*********************************************************
Starting simulation!
*********************************************************


*********************************************************
FRISC processor stopped! Status of CPU R6: 213
*********************************************************


C:\Users\Karlo\OneDrive - fer.hr\5.semestar\PPROJ\lab-4\friscjs.js:898
      throw {
      ^
{ name: 'Halting', message: 'Stop the CPU' }

Node.js v18.15.0
